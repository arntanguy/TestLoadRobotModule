---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: false
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# Additional robots to load
robots:
  ground:
    module: env/ground
  box2:
    init_pos:
      translation: [0, 1.0, 0.5]
    visual:
      name: box
      origin:
        translation: [0, 0, 0]
        rotation: [0, 0, 0]
      material:
        color:
          r: 0 
          g: 0 
          b: 1 
          a: 1
      geometry:
        box:
          size: [1, 0.5, 1.5]
      inertia:
        mass: 5
      fixed: false
  sphere:
    visual:
      name: sphere
      origin:
        translation: [0, 0, 0]
        rotation: [0, 0, 0]
      material:
        color:
          r: 0 
          g: 1 
          b: 0
          a: 1
      geometry:
        sphere:
          radius: 0.5
# General constraints, always on
constraints:
- type: contact
- type: dynamics
  damper: [0.1, 0.01, 0.5]
- type: compoundJoint
# Collision constraint
collisions:
- type: collision
  useMinimal: true
# Initial set of contacts
contacts:
- r2: ground
  r1Surface: LeftFoot
  r2Surface: AllGround
- r2: ground
  r1Surface: RightFoot
  r2Surface: AllGround

# Some options for a specific robot
jvrc1:
  posture:
    stiffness: 1
    weight: 10
  ff:
    stiffness: 2
    weight: 100
# Implement some additional text states
states: {}
# Transitions map
transitions:
- [TestLoadRobotModule_Initial, OK, TestLoadRobotModule_Initial, Strict]
# Initial state
init: TestLoadRobotModule_Initial
